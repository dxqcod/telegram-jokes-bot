from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, CallbackContext
import random
import asyncio

# –ü—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
jokes = [    
    "–ó–∞—Ö–æ–¥–∏—Ç –ü–∞—Å–∫–∞–ª—å –≤ –±–∞—Ä, –∞ –≤ –±–∞—Ä–µ —Å—Ç–æ —Ç—ã—Å—è—á –ø–∞—Å–∫–∞–ª–µ–π...",
    "–ü—Ä–æ –º–æ–≥–∏–ª—É: ‚Äî –ü–æ—á–µ–º—É –Ω–µ–ª—å–∑—è —Å–ø—Ä—è—Ç–∞—Ç—å —Ç–∞–π–Ω—É –Ω–∞ –∫–ª–∞–¥–±–∏—â–µ? ‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ –≤—Å–µ —Ç–∞–º –º–µ—Ä—Ç–≤—ã –∏ –≤—ã–∫–æ–ø–∞–Ω—ã (pun on \"grave\" as serious).",
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –º–æ–≥—É—Ç –ø–æ–∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ —Å–∫–µ–π—Ç–±–æ—Ä–¥–µ? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –±–æ—è—Ç—Å—è, —á—Ç–æ –±—É–¥—É—Ç –∑–∞—Ü–µ–ø–ª–µ–Ω—ã –∑–∞ –±–∞–≥.",
    "–ö–∞–∫–æ–π —Å–∞–º—ã–π –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è? Python, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –ø—Ä–æ—Å—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–º.",
    "–ü–æ—á–µ–º—É JavaScript —Ç–∞–∫–∏–µ –±–µ–¥–Ω—ã–µ? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –≤—Å–µ–≥–¥–∞ —Ç—Ä–∞—Ç—è—Ç –≤—Å—ë –Ω–∞ 'this'.",
    "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∞–º—ã–π –∫—Ä–∞—Å–∏–≤—ã–π? –°++, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–µ–≥–æ —Å–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ '—Å–∫–æ–±–æ—á–∫–∏'.",
    "–ü—Ä–æ —Ñ–æ—Ç–æ–Ω—ã: ‚Äî –ü–æ—á–µ–º—É —Ñ–æ—Ç–æ–Ω—É –Ω–µ –Ω—É–∂–µ–Ω —á–µ–º–æ–¥–∞–Ω? ‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–µ–≥–æ –Ω–µ—Ç –º–∞—Å—Å—ã.",    
    "–ü—Ä–æ –Ω–µ–π—Ç—Ä–æ–Ω—ã: ‚Äî –ù–µ–π—Ç—Ä–æ–Ω –∑–∞—Ö–æ–¥–∏—Ç –≤ –±–∞—Ä –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: ¬´–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –≤—ã–ø–∏–≤–∫–∞?¬ª –ë–∞—Ä–º–µ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç: ¬´–î–ª—è –≤–∞—Å ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ù–∏–∫–∞–∫–æ–≥–æ –∑–∞—Ä—è–¥–∞!¬ª",
    "–ü—Ä–æ —Ö–∏–º–∏—á–µ—Å–∫—É—é —Ä–µ–∞–∫—Ü–∏—é: ‚Äî –î–≤–∞ –∞—Ç–æ–º–∞ –≥—É–ª—è—é—Ç –ø–æ —É–ª–∏—Ü–µ. –û–¥–∏–Ω –≤–¥—Ä—É–≥ –≥–æ–≤–æ—Ä–∏—Ç: ¬´–û–π, —è –ø–æ—Ç–µ—Ä—è–ª —ç–ª–µ–∫—Ç—Ä–æ–Ω!¬ª –í—Ç–æ—Ä–æ–π —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: ¬´–¢—ã —É–≤–µ—Ä–µ–Ω?¬ª  ‚Äî ¬´–î–∞, —è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä—è–∂–µ–Ω!¬ª",
    "–ü—Ä–æ –∫–æ—Ç–∞ –®—Ä—ë–¥–∏–Ω–≥–µ—Ä–∞: ‚Äî –ß—Ç–æ —Å–∫–∞–∑–∞–ª –∫–æ—Ç –®—Ä—ë–¥–∏–Ω–≥–µ—Ä–∞, –∫–æ–≥–¥–∞ –ø–æ–ø–∞–ª –≤ –∫–æ—Ä–æ–±–∫—É? ‚Äî ¬´–Ø –∂–∏–≤‚Ä¶ –∏–ª–∏ –Ω–µ—Ç¬ª.",
    "–ü—Ä–æ –∫–∏—Å–ª–æ—Ä–æ–¥ –∏ –∫–∞–ª–∏–π: ‚Äî –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç, –µ—Å–ª–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∫–∏—Å–ª–æ—Ä–æ–¥ –∏ –∫–∞–ª–∏–π?  ‚Äî –ü–æ–ª—É—á–∏—Ç—Å—è \"–û–ö\"!",
    "–ü—Ä–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É: ‚Äî –ü–æ—á–µ–º—É –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –Ω–µ —Ö–æ–¥—è—Ç –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∏?¬†‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤–µ—Å–µ–ª—å—è —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –Ω—É–ª—é.",
    "–ü—Ä–æ —ç–Ω—Ç—Ä–æ–ø–∏—é: ‚Äî –ü–æ—á–µ–º—É –Ω–∏–∫—Ç–æ –Ω–µ –ª—é–±–∏—Ç –æ–±—Å—É–∂–¥–∞—Ç—å —ç–Ω—Ç—Ä–æ–ø–∏—é? ‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã —Å—Ä–∞–∑—É —Å–∫–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Ö–∞–æ—Å.",
    "–ü—Ä–æ —Ö–∏–º–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: ‚Äî –ü–æ—á–µ–º—É –≥–µ–ª–∏–π, –Ω–µ–æ–Ω –∏ –∞—Ä–≥–æ–Ω –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –≤–µ—á–µ—Ä–∏–Ω–∫–∞—Ö? ‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –≤—Å–µ –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–µ –≥–∞–∑—ã!",
    "–ü—Ä–æ —É—Å–∫–æ—Ä–µ–Ω–∏–µ: ‚Äî –£—Å–∫–æ—Ä–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞—à–ª–∏ –≤ –±–∞—Ä. –£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞–∑–ª–∏–≤–∞–µ—Ç –Ω–∞–ø–∏—Ç–∫–∏ –∏ –≥–æ–≤–æ—Ä–∏—Ç: ¬´–†–∞—Å—Å–ª–∞–±—å—Å—è, —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ¬ª.",
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç –∫–æ—Ñ–µ? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –ø–æ–º–æ–≥–∞–µ—Ç –∏–º –Ω–µ '–ø–∏—Ç—å' –±–∞–≥–∏!"
]

# –ü—Ä–∏–º–µ—Ä—ã —Å–º–∞–π–ª–æ–≤
smileys = ["üòä", "üòÇ", "üëª", "üï∑Ô∏è", "üòé", "üòú", "üòÅ", "üíÄ", "üòÖ", "üòã"]


def get_joke():
    return random.choice(jokes)

def get_random_smileys():
    return ''.join(random.choice(smileys) for _ in range(random.randint(4, 7)))

async def start(update: Update, context: CallbackContext) -> None:
    print("–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    keyboard = [[InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–π –∞–Ω–µ–∫–¥–æ—Ç", callback_data='new_joke')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = await update.message.reply_text("–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç", reply_markup=reply_markup)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    context.user_data['message_ids'] = [message.message_id]

async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–Ω–æ–ø–∫—É")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    if query.data == 'new_joke':
        joke = get_joke()
        print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–µ–∫–¥–æ—Ç: {joke}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è —Å–¥–≤–∏–≥–∞
        if 'message_ids' in context.user_data:
            previous_message_id = context.user_data['message_ids'][-1]
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫–∏ –¥–ª—è —Å–¥–≤–∏–≥–∞ —Å—Ç–∞—Ä–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞ –≤–Ω–∏–∑
                for _ in range(1):  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–º–∞–π–ª–∏–∫–∞–º–∏
                    await asyncio.sleep(0.5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
                    smileys_message = get_random_smileys()
                    await query.message.edit_text(smileys_message)  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –∏ —Å–º–∞–π–ª–∞–º–∏
                await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                await context.bot.delete_message(chat_id=query.message.chat_id, message_id=previous_message_id)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –∏ –∫–Ω–æ–ø–∫—É
        keyboard = [[InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–π –∞–Ω–µ–∫–¥–æ—Ç", callback_data='new_joke')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        new_message = await query.message.reply_text(joke, reply_markup=reply_markup)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        context.user_data['message_ids'].append(new_message.message_id)

def main():
    application = Application.builder().token("token").build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(button))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    application.run_polling()

if __name__ == '__main__':
    main()
